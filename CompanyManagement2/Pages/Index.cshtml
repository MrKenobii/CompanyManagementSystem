@page
@model IndexModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@using CompanyManagement2.Models;
@{
    ViewData["Title"] = "Home page";
}
<div class="text-center dx-viewport">
    <h1 class="display-4">Welcome</h1>
    <h2>The time on the server is @DateTime.Now</h2>
    <div class="demo-container">
        <div id="gridContainer"></div>
    </div>
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
    console.log("Script works");    
      
      $(() => {
        function logEvent(eventName) {
          const logList = $('#events ul');
          const newItem = $('<li>', { text: eventName });
      
          logList.prepend(newItem);
        }
        function postData(data) {
          console.log("Inside postData() function");
          $.ajax({
              type: "POST",
              url: "?handler=Add",
              contentType: "application/json; charset=utf-8",
              dataType: "json",
              data: JSON.stringify(data),
              headers:
                {
                    "RequestVerificationToken": "@Xsrf.GetAndStoreTokens(HttpContext).RequestToken"
                },
          })
              .done(function (result) {
                  console.log(result);
                  retrieveData();
              });
            }
        function updateData(data){
          console.log("Inside updateData() function");
          $.ajax({
            type: "POST",
            url:"?handler=Update",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            headers:
                {
                   "RequestVerificationToken": "@Xsrf.GetAndStoreTokens(HttpContext).RequestToken"
                },
          }).done(function (result){
              console.log(result);
              retrieveData();
          });
       
        }
        function retrieveData(){
            $.ajax({
                         type: "POST",
                         url: "/?handler=Retrieve",
                         headers:
                         {
                             "RequestVerificationToken": "@Xsrf.GetAndStoreTokens(HttpContext).RequestToken"
                         },
                         data: {},
                         contentType: "application/json; charset=utf-8",
                         dataType: "json",
                         success: function (msg) {
                             // alert(msg[0].id);
                         }
                     }).done(function (data) {
                         console.log("Inside done()");
                         console.log(data);
                        $("#gridContainer").dxDataGrid({
                                dataSource: data,
                                paging: {
                                    pageSize: 10
                                },
                                pager: {
                                    showPageSizeSelector: true,
                                    allowedPageSizes: [5, 10, 20],
                                    showInfo: true
                                },
                                showBorders: true,
                                editing: {
                                      mode: 'row',
                                      allowUpdating: true,
                                      allowDeleting: true,
                                      allowAdding: true,
                                },
                                columns: [{
                                              dataField: 'id',
                                              dataType: 'number',
                                            }, {
                                              dataField: 'companyName',
                                              dataType: 'string',
                                            }, {
                                              dataField: 'address',
                                              dataType: 'string',
                                            }, {
                                              dataField: 'city',
                                              dataType: 'string',
                                            }, {
                                              dataField: 'state',
                                              dataType: 'string',
                                            }, {
                                              dataField: 'zipcode',
                                              dataType: 'string',
                                            },{
                                              dataField: 'phone',
                                              dataType: 'string',
                                            },{
                                              dataField: 'fax',
                                              dataType: 'string',
                                            },{
                                             dataField: 'website',
                                             dataType: 'string',
                                            }],
                               onEditingStart() {
                                    logEvent('EditingStart');
                                  },
                                  onInitNewRow(e) {
                                  console.log("Inside onInitNewRow()");
                                   console.log(e);
                                    logEvent('InitNewRow');
                                  },
                                  onRowInserting() {
                                    logEvent('RowInserting');
                                  },
                                  onRowInserted(e) {
                                    console.log("Inside onRowInserted()");
                                    postData(e.data);
                                    console.log(e.data);
                                    logEvent('RowInserted');
                                  },
                                  onRowUpdating() {
                                    logEvent('RowUpdating');
                                  },
                                  onRowUpdated(e) {
                                  console.log("Inside onRowUpdated()");
                                  updateData(e.data);
                                  console.log(e.data);
                                    logEvent('RowUpdated');
                                  },
                                  onRowRemoving() {
                                    logEvent('RowRemoving');
                                  },
                                  onRowRemoved(e) {
                                    console.log(e);
                                    console.log("Inside onRowRemoved()");
                                    deleteData(e.data);
                                    logEvent('RowRemoved');
                                  },
                                  onSaving() {
                                    logEvent('Saving');
                                  },
                                  onSaved(e) {
                                    console.log("Inside onSaved()");
                                    console.log(e);
                                    logEvent('Saved');
                                  },
                                  onEditCanceling() {
                                    logEvent('EditCanceling');
                                  },
                                  onEditCanceled() {
                                    logEvent('EditCanceled');
                                  },
                               });
               
                     }).fail(function (error) {
                             console.log("Error: " + error);
                     }); 
                   
                   $(".dx-link-edit").click(function (){
                         console.log("Inside edit ()");
                     });   
        }
        function deleteData(data){
         console.log("Inside deleteData() function");
          $.ajax({
            type: "POST",
            url:"?handler=Delete",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            headers:
                {
                   "RequestVerificationToken": "@Xsrf.GetAndStoreTokens(HttpContext).RequestToken"
                },
          }).done(function (result){
              console.log(result);
              retrieveData();
          });
        }
        retrieveData();
        
      });
     
          
     
               
    </script>


</div>


